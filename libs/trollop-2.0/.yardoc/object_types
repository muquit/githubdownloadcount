{
:module["Trollop:	root[;:constant["Trollop::VERSION"Trollop::FLOAT_RE"Trollop::PARAM_RE" Trollop::Parser::FLAG_TYPES"&Trollop::Parser::SINGLE_ARG_TYPES"%Trollop::Parser::MULTI_ARG_TYPES"Trollop::Parser::TYPES"-Trollop::Parser::INVALID_SHORT_ARG_REGEX:method[$"
#date"Trollop::Parser#leftovers"Trollop::Parser#specs"Trollop::Parser#initialize"Trollop::Parser#opt"Trollop::Parser#version"Trollop::Parser#banner"Trollop::Parser#text"Trollop::Parser#depends"Trollop::Parser#conflicts"Trollop::Parser#stop_on"$Trollop::Parser#stop_on_unknown"Trollop::Parser#parse")Trollop::Parser#parse_date_parameter"Trollop::Parser#educate"Trollop::Parser#width"Trollop::Parser#wrap"Trollop::Parser#die"Trollop::Parser#each_arg",Trollop::Parser#parse_integer_parameter"*Trollop::Parser#parse_float_parameter"'Trollop::Parser#parse_io_parameter"0Trollop::Parser#collect_argument_parameters"3Trollop::Parser#resolve_default_short_options!"Trollop::Parser#wrap_line"Trollop::Parser#cloaker"Trollop::Parser#options"5Trollop::Parser#with_standard_exception_handling"Trollop::Parser.options"Trollop::Parser.die"5Trollop::Parser.with_standard_exception_handling:
class[	"Trollop::CommandlineError"Trollop::HelpNeeded"Trollop::VersionNeeded"Trollop::Parser